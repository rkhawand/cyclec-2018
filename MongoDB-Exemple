import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.AggregateIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

import java.util.ArrayList;
import java.util.List;

import com.mongodb.client.model.Indexes;

import static com.mongodb.client.model.Accumulators.sum;
import static com.mongodb.client.model.Aggregates.group;
import static com.mongodb.client.model.Aggregates.match;
import static com.mongodb.client.model.Filters.eq;
import static java.util.Arrays.asList;


public class Mongodb_Example {
	public static void main(final String[] args) {

	       // 1. Connect to MongoDB instance running on localhost
		     //MongoClient mongoClient = new MongoClient();
		     //or connect to a server with a host and port number
	       MongoClient mongoClient = new MongoClient("localhost", 27017);

	       // Access database named 'test', if the database does not exist, it will create it
	       MongoDatabase database = mongoClient.getDatabase("test");

	       // Access collection named 'restaurants', if the collection does not exist, it will create it
	       MongoCollection<Document> collection = database.getCollection("libraries");

	       
	       
	       // 2. Insert 
	       List<Document> documents = asList(
	               new Document("name", "CambridgeBooks")
	                       .append("stars", 4)
	                       .append("books", asList("Lolita", "The Great Gatsby ", "In Search of Lost Time", "The Hobbit")),
	               new Document("name", "OxfordScholar")
	                       .append("stars", 3)
	                       .append("books", asList("Dr Jekyll and Mr Hyde", "The Hobbit", "Anna Karenina"))
	                       .append("Location", "Oxford"),
	               new Document("name", "Alexandria")
	                       .append("stars", 4)
	                       .append("books", asList("Harry Potter", "A Study In Scarlet", "Murder on the Orient Express")));
	       
	       collection.insertMany(documents);


	       
	       // 3. Query 
	       List results = collection.find().into(new ArrayList<>());
	       System.out.println(results);
	       
	       

	       // 4. Update Query 
	       BasicDBObject searchQuery_set = new BasicDBObject().append("stars", 4);
	       BasicDBObject newDocument_set = new BasicDBObject().append("$set", new BasicDBObject().append("location", "anywhere"));
	       //we can use updateOne to update only the first document with matched criteria
	       collection.updateMany(searchQuery_set, newDocument_set);
	       //results = collection.find().into(new ArrayList<>());
		   //System.out.println(results);

	       
	        
	       // 5. Performing Aggregation
	       System.out.println("\n\n---------- Aggregating ----------");
	       //In SQL count(*) and with group by is an equivalent of mongodb aggregation.
	       AggregateIterable<Document> output = collection.aggregate(asList(match(eq("books", "The Hobbit")),
	              group("$stars", sum("count", 1))));
	       for (Document dbObject : output)
	       {
	           System.out.println(dbObject);
	       }
	        
	       
	       //Delete Database
	       //database.drop();
	       
	       
	       
	       mongoClient.close();

	   }

}
